// <auto-generated />
using System;
using Infrastrucutre;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastrucutre.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250623134057_AddedMenuContext")]
    partial class AddedMenuContext
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Core.Menu.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateCreated")
                        .HasComment("Дата створення");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateUpdated")
                        .HasComment("Дата оновлення");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name")
                        .HasComment("Name");

                    b.HasKey("Id");

                    b.ToTable("Menus", "menu");
                });

            modelBuilder.Entity("Domain.Core.Menu.MenuGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateCreated")
                        .HasComment("Дата створення");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateUpdated")
                        .HasComment("Дата оновлення");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name")
                        .HasComment("Name");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("MenuGroups", "menu");
                });

            modelBuilder.Entity("Domain.Core.Menu.MenuItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateCreated")
                        .HasComment("Дата створення");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateUpdated")
                        .HasComment("Дата оновлення");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Description")
                        .HasComment("Description");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("boolean");

                    b.Property<Guid>("MenuGroupId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name")
                        .HasComment("Name");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("Price")
                        .HasComment("Price");

                    b.HasKey("Id");

                    b.HasIndex("MenuGroupId");

                    b.ToTable("MenuItem", "menu");
                });

            modelBuilder.Entity("Domain.Supporting.Auth.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateCreated")
                        .HasComment("Дата створення");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateUpdated")
                        .HasComment("Дата оновлення");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Email")
                        .HasComment("Email");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("Name")
                        .HasComment("Ім'я користувача");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Password")
                        .HasComment("Пароль користувача");

                    b.Property<string>("Phone")
                        .HasColumnType("text")
                        .HasColumnName("Phone")
                        .HasComment("Номер телефону користувача");

                    b.HasKey("Id");

                    b.ToTable("Users", "auth");
                });

            modelBuilder.Entity("Domain.Core.Menu.MenuGroup", b =>
                {
                    b.HasOne("Domain.Core.Menu.Menu", "Menu")
                        .WithMany("Groups")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("Domain.Core.Menu.MenuItem", b =>
                {
                    b.HasOne("Domain.Core.Menu.MenuGroup", "MenuGroup")
                        .WithMany("Items")
                        .HasForeignKey("MenuGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuGroup");
                });

            modelBuilder.Entity("Domain.Core.Menu.Menu", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("Domain.Core.Menu.MenuGroup", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
